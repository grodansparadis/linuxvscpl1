# =========================================================================
#                      Autogenerated from Makefile.in         
# =========================================================================

# STATIC = yes if a static build is requested.
STATIC=@STATIC@
VSCP_PROJ_BASE_DIR=@VSCPDIR@

prefix = @prefix@
exec_prefix = @exec_prefix@
INSTALL = @INSTALL@
top_srcdir = @top_srcdir@
top_builddir = @top_builddir@

CC = @CC@
CXX = @CXX@

# get version from the version file
MAJOR_VERSION = `sed '35!d' ../common/version.h  | cut -b 33-`
MINOR_VERSION = `sed '36!d' ../common/version.h  | cut -b 33-`
RELEASE_VERSION = `sed '37!d' ../common/version.h  | cut -b 33-`
BUILD_VERSION = `sed '38!d' ../common/version.h  | cut -b 33-
LIB_PLUS_VER = "libvscpl1.so.$(MAJOR_VERSION).$(MINOR_VERSION).$(RELEASE_VERSION)"

CFLAGS = -std=c99 -fPIC @CFLAGS@ -DCBC -I@top_srcdir@ -I../common -I../../common
CXXFLAGS = -std=c++11 -D__LINUX__ -fPIC -D_REENTRANT @CXXFLAGS@ 
CPPFLAGS = -D__LINUX__ -fPIC @CPPFLAGS@ -fno-var-tracking-assignments -I@top_srcdir@ -I../common -I../../common

LDFLAGS = @LDFLAGS@
EXTRALIBS = @EXTRALIBS@ 

DLFLAGS = -g -shared -fPIC
STRIP = strip
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_DIR = /usr/bin/install -c -d
srcdir = .
top_srcdir = .
top_builddir =
bindir = ${exec_prefix}/bin
libdir = ${exec_prefix}/lib
datadir = ${prefix}/share
includedir = ${prefix}/include
DLLPREFIX = lib


### Variables: ###

DESTDIR =

VSCPL1_OBJECTS =  vscpl1.o \
	vscpremotetcpif.o \
	vscphelper.o \
	guid.o \
	crc.o \
	crc8.o \
	vscp_aes.o \
	vscpmd5.o \
	fastpbkdf2.o \
	vscpbase64.o

### Targets: ###

all: libvscpl1.so test

test:  test.o $(PROJOBJS)
	$(CXX) -o $@ test.o $(PROJOBJS) $(LDFLAGS) $(EXTRALIBS)

libvscpl1.so: $(VSCPL1_OBJECTS)
	$(CXX) -o $@ $(VSCPL1_OBJECTS) $(DLFLAGS) $(EXTRALIBS) 	

vscpl1.o: vscpl1.cpp vscpl1.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c vscpl1.cpp -o $@

vscphelperlib.o: ../vscphelperlib.cpp ../vscphelperlib.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../vscphelperlib.cpp -o $@

vscpremotetcpif.o: ../common/vscpremotetcpif.cpp ../common/vscpremotetcpif.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../common/vscpremotetcpif.cpp -o $@

vscphelper.o: ../common/vscphelper.cpp ../common/vscphelper.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../common/vscphelper.cpp -o $@

guid.o: ../common/guid.cpp ../common/guid.h
	$(CXX) $(CXXFLAGS) $(CPPFLAGS) -c ../common/guid.cpp -o $@	
	
vscp_aes.o: ../../common/vscp_aes.c ../../common/vscp_aes.h
	$(CC) $(CFLAGS) -c ../../common/vscp_aes.c -o $@

crc.o: ../../common/crc.c ../../common/crc.h
	$(CC) $(CFLAGS) -c ../../common/crc.c -o $@
	
crc8.o: ../../common/crc8.c ../../common/crc8.h
	$(CC) $(CFLAGS) -c ../../common/crc8.c -o $@		

vscpbase64.o: ../../common/vscpbase64.c ../../common/vscpbase64.h
	$(CC) $(CFLAGS) -c ../../common/vscpbase64.c -o $@
	
fastpbkdf2.o: ../../common/fastpbkdf2.c ../../common/fastpbkdf2.h
	$(CC) $(CFLAGS) -c ../../common/fastpbkdf2.c -o $@

vscpmd5.o: ../../common/vscpmd5.c ../../common/vscpmd5.h
	$(CC) $(CFLAGS) -c ../../common/vscpmd5.c -o $@	

dllist.o: ../../common/dllist.c ../../common/dllist.h
	$(CC) $(CFLAGS) -c ../../common/dllist.c -o $@	
	
install: all
	$(INSTALL_PROGRAM) -d $(DESTDIR)$(libdir)
	$(STRIP) libvscpl1.so
	cp libvscpl1.so $(LIB_PLUS_VER)
	$(INSTALL_PROGRAM) $(LIB_PLUS_VER) $(DESTDIR)$(libdir)
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscpl1.so
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscpl1.so.$(MAJOR_VERSION)
	ln -fs $(libdir)/$(LIB_PLUS_VER) $(DESTDIR)$(libdir)/libvscpl1.so.$(MAJOR_VERSION).$(MINOR_VERSION)
	$(INSTALL_PROGRAM) vscpl1.h $(DESTDIR)$(includedir)
#	ar rcs libvscpl1.a libvscpl1.o

uninstall: 

install-strip: install

deb:    all
	echo "\n" | ./builddist.sh
	@mkdir -p ../../../dist
	@mv *.deb ../../../dist

clean:
	rm -rf ./.deps ./.pch
	rm -f ./*.o
	rm -f ../common/*.o
	rm -f ../../common/*.o
	rm -f ../../../common/*.o
	rm -f ../../../../common/*.o
	rm -f libvscpl1.so
	rm -f libvscpl1.so.$(MAJOR_VERSION)
	rm -f libvscpl1.so.$(MAJOR_VERSION).$(MINOR_VERSION)
	rm -f libvscpl1.so.$(MAJOR_VERSION).$(MINOR_VERSION).$(RELEASE_VERSION)
	rm -f test
	rm -f *.deb
	rm -f *.gz

distclean: clean
	rm -f config.cache config.log config.status bk-deps bk-make-pch shared-ld-sh Makefile

$(ALWAYS_BUILD):  .FORCE

.FORCE: 

# Include dependency info, if present:
-include .deps/*.d

.PHONY: all install uninstall clean distclean data .FORCE



